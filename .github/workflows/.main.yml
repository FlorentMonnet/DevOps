name: CI devops 2022 CPE
on:
  #to begin you want to launch this job in main and develop
  push:
    branches: ['main', 'develop']
  pull_request:
jobs:
  test-backend:
    runs-on: ubuntu-18.04
    steps:

      #checkout your github code using actions/checkout@v2.3.3
      - name: Checkout code
        uses: actions/checkout@v2.3.3

      #do the same with another action (actions/setup-java@v2) that enable to setup jdk 11
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      #finally build your app with the latest command
      - name: Build and test with Maven
        run: mvn clean verify -DskipTests --file ./java/simple-api-main/simple-api
      
      - name: Check quality
        run:  mvn -B verify sonar:sonar -Dsonar.projectKey=FlorentMonnet_DevOps -Dsonar.organization=florentmonnet -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{secrets.SONAR_TOKEN }}  --file ./java/simple-api-main/simple-api/pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build-and-push-docker-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{secrets.DOCKERHUB_TOKEN }}
      
      - name: Build image and push backend
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./java/simple-api-main/simple-api
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/backendapi-image:1.0
          push: ${{ github.ref == 'refs/heads/main' }}
      
      - name: Build image and push database
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./postgres
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/postgres-image:1.0
          push: ${{ github.ref == 'refs/heads/main' }}
      
      - name: Build image and push httpd
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./apache
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/apache-image:1.0
          push: ${{ github.ref == 'refs/heads/main' }}
      